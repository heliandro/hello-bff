name: Nodejs Pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - name: Install packages
        run: npm install

      - name: Test and coverage
        run: npm run test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      REPOSITORY_DOCKERFILES: devops-dockerfiles
      DOCKERFILE_DIRECTORY: dockerfiles
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Checkout Dockerfiles Repository
        id: tools
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ env.REPOSITORY_DOCKERFILES }}
          path: ${{ env.DOCKERFILE_DIRECTORY }}

      - name: Add Release Tag
        id: release
        uses: rymndhng/release-on-push-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_prefix: 'v'
          bump_version_scheme: 'minor'

      - name: Check Output Parameters
        run: |
          echo "Get repository name ${{ github.event.repository.name }}"
          echo "Get Dockerfile directory ${{ env.DOCKERFILE_DIRECTORY }}"
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DOCKERFILE_DIRECTORY }}/nodejs/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.release.outputs.tag_name }}

      - name: Checkout Helm Chart Repository
        id: helmchart
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/helm-chart-hello-bff
          path: infraestructure
          token: ${{ secrets.WORKFLOW_ACTIONS_TOKEN }}

      - name: Update Helm Chart Repository
        run: |
          cd ./infraestructure
          sed -i "s/tag: v[0-9]*\.[0-9]*\.[0-9]*/tag: ${{ steps.release.outputs.tag_name }}/" values.yaml
          git add values.yaml
          git config user.name github-actions
          git config user.email actions@github.com
          git commit -m "update version to ${{ steps.release.outputs.tag_name }}"
          git push origin main
